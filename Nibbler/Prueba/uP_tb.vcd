$date
	Mon Nov 16 17:58:59 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! data_bus [3:0] $end
$var wire 1 " z_flag $end
$var wire 8 # program_byte [7:0] $end
$var wire 1 $ phase $end
$var wire 4 % oprnd [3:0] $end
$var wire 4 & instr [3:0] $end
$var wire 1 ' c_flag $end
$var wire 12 ( address_RAM [11:0] $end
$var wire 4 ) accu [3:0] $end
$var wire 12 * PC [11:0] $end
$var wire 4 + FF_out [3:0] $end
$var reg 1 , clock $end
$var reg 4 - pushbuttons [3:0] $end
$var reg 1 . reset $end
$var integer 32 / nota [31:0] $end
$scope module uPmodule $end
$var wire 1 , clock $end
$var wire 4 0 data_bus [3:0] $end
$var wire 4 1 pushbuttons [3:0] $end
$var wire 1 . reset $end
$var wire 1 " z_flag $end
$var wire 8 2 program_byte [7:0] $end
$var wire 1 $ phase $end
$var wire 4 3 oprnd [3:0] $end
$var wire 4 4 instr [3:0] $end
$var wire 2 5 flags_out [1:0] $end
$var wire 2 6 flags_in [1:0] $end
$var wire 13 7 control [12:0] $end
$var wire 1 ' c_flag $end
$var wire 4 8 alu_result [3:0] $end
$var wire 12 9 address_RAM [11:0] $end
$var wire 7 : address [6:0] $end
$var wire 4 ; accu [3:0] $end
$var wire 12 < PC [11:0] $end
$var wire 4 = FF_out [3:0] $end
$scope module A1 $end
$var wire 4 > data_bus [3:0] $end
$var wire 3 ? selector [2:0] $end
$var wire 1 @ zero $end
$var wire 2 A flags [1:0] $end
$var wire 4 B accu [3:0] $end
$var reg 1 C carry $end
$var reg 4 D result [3:0] $end
$upscope $end
$scope module A2 $end
$var wire 1 , clk $end
$var wire 1 E enable $end
$var wire 1 . reset $end
$var wire 4 F result [3:0] $end
$var reg 4 G accu [3:0] $end
$upscope $end
$scope module BD1 $end
$var wire 1 H enable $end
$var wire 4 I out [3:0] $end
$var wire 4 J in [3:0] $end
$upscope $end
$scope module BD2 $end
$var wire 1 K enable $end
$var wire 4 L in [3:0] $end
$var wire 4 M out [3:0] $end
$upscope $end
$scope module BD3 $end
$var wire 1 N enable $end
$var wire 4 O in [3:0] $end
$var wire 4 P out [3:0] $end
$upscope $end
$scope module FE1 $end
$var wire 1 , clk $end
$var wire 1 Q enable $end
$var wire 1 . reset $end
$var wire 8 R q [7:0] $end
$var wire 4 S operand [3:0] $end
$var wire 8 T opcode [7:0] $end
$var wire 4 U instruction [3:0] $end
$scope module F1 $end
$var wire 1 , clk $end
$var wire 1 Q enable $end
$var wire 1 . reset $end
$var wire 8 V d [7:0] $end
$var reg 8 W q [7:0] $end
$upscope $end
$upscope $end
$scope module FL1 $end
$var wire 1 , clk $end
$var wire 2 X d [1:0] $end
$var wire 1 Y enable $end
$var wire 1 . reset $end
$var reg 2 Z q [1:0] $end
$upscope $end
$scope module M1 $end
$var wire 7 [ address [6:0] $end
$var reg 13 \ control [12:0] $end
$upscope $end
$scope module O1 $end
$var wire 1 , clk $end
$var wire 4 ] d [3:0] $end
$var wire 1 ^ enable $end
$var wire 1 . reset $end
$var reg 4 _ q [3:0] $end
$upscope $end
$scope module PC1 $end
$var wire 1 , clock $end
$var wire 1 ` enable $end
$var wire 1 a load $end
$var wire 12 b load_data [11:0] $end
$var wire 1 . reset $end
$var reg 12 c value [11:0] $end
$upscope $end
$scope module PH1 $end
$var wire 1 , clk $end
$var wire 1 d d $end
$var wire 1 e enable $end
$var wire 1 . reset $end
$var wire 1 $ q $end
$scope module F1 $end
$var wire 1 , clk $end
$var wire 1 d d $end
$var wire 1 e enable $end
$var wire 1 . reset $end
$var reg 1 $ q $end
$upscope $end
$upscope $end
$scope module RAM1 $end
$var wire 12 f address_RAM [11:0] $end
$var wire 4 g data [3:0] $end
$var wire 1 h enable $end
$var wire 1 i read $end
$var wire 1 j write $end
$var reg 4 k data_out [3:0] $end
$upscope $end
$scope module ROM1 $end
$var wire 12 l address [11:0] $end
$var wire 8 m opcode [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx m
bx l
bx k
xj
xi
xh
bx g
bx f
1e
xd
bx c
bx b
xa
x`
bx _
x^
bx ]
bx \
bx [
bx Z
xY
bx X
bx W
bx V
bx U
bx T
bx S
bx R
xQ
bx P
b110 O
xN
bx M
bx L
xK
bx J
bx I
xH
bx G
bx F
xE
bx D
xC
bx B
bx A
x@
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
b110 1
bx 0
b0 /
0.
b110 -
0,
bx +
bx *
bx )
bx (
x'
bx &
bx %
x$
bx #
x"
bx !
$end
#2
b0 !
b0 0
b0 >
b0 I
b0 M
b0 P
b0 ]
b0 g
1@
0^
0N
0i
0j
0h
1K
0E
b0 ?
0H
0Y
1`
0a
b1 6
b1 A
b1 X
0C
b0 8
b0 D
b0 F
b0 L
b1000000001000 7
b1000000001000 \
b0 %
b0 3
b0 J
b0 S
b0 &
b0 4
b0 U
0"
0'
1d
1Q
b0 )
b0 ;
b0 B
b0 G
b0 R
b0 W
b0 5
b0 Z
b0 +
b0 =
b0 _
b1001111 (
b1001111 9
b1001111 b
b1001111 f
b1001111 #
b1001111 2
b1001111 T
b1001111 V
b1001111 m
b0 *
b0 <
b0 c
b0 l
b0 :
b0 [
0$
1.
#3
0.
#5
b0 6
b0 A
b0 X
0@
1"
b1111 8
b1111 D
b1111 F
b1111 L
b1 5
b1 Z
b1111 !
b1111 0
b1111 >
b1111 I
b1111 M
b1111 P
b1111 ]
b1111 g
0K
1E
b10 ?
1H
1Y
0`
b11010000010 7
b11010000010 \
b1111 %
b1111 3
b1111 J
b1111 S
b100 &
b100 4
b100 U
0d
0Q
b1001111 R
b1001111 W
b111101000011 (
b111101000011 9
b111101000011 b
b111101000011 f
b1000011 #
b1000011 2
b1000011 T
b1000011 V
b1000011 m
b1 *
b1 <
b1 c
b1 l
b100011 :
b100011 [
1$
1,
#10
0,
#15
b1111 !
b1111 0
b1111 >
b1111 I
b1111 M
b1111 P
b1111 ]
b1111 g
b1101000011 (
b1101000011 9
b1101000011 b
b1101000011 f
b11 %
b11 3
b11 J
b11 S
1K
0E
b0 ?
0H
0Y
1`
b1000011 R
b1000011 W
b1000000001000 7
b1000000001000 \
0"
1d
1Q
b1111 )
b1111 ;
b1111 B
b1111 G
b0 5
b0 Z
b100000 :
b100000 [
0$
1,
#20
0,
#25
b11 8
b11 D
b11 F
b11 L
b11 !
b11 0
b11 >
b11 I
b11 M
b11 P
b11 ]
b11 g
0K
1E
b10 ?
1H
1Y
0`
b11010000010 7
b11010000010 \
0d
0Q
b1111000001 (
b1111000001 9
b1111000001 b
b1111000001 f
b11000001 #
b11000001 2
b11000001 T
b11000001 V
b11000001 m
b10 *
b10 <
b10 c
b10 l
b100001 :
b100001 [
1$
1,
#30
0,
#35
b11 !
b11 0
b11 >
b11 I
b11 M
b11 P
b11 ]
b11 g
b111000001 (
b111000001 9
b111000001 b
b111000001 f
b1 %
b1 3
b1 J
b1 S
b1100 &
b1100 4
b1100 U
1K
0E
b0 ?
0H
0Y
1`
b11000001 R
b11000001 W
b1000000001000 7
b1000000001000 \
1d
1Q
b11 )
b11 ;
b11 B
b11 G
b1100000 :
b1100000 [
0$
1,
#40
0,
#45
0`
1a
b100000001000 7
b100000001000 \
0d
0Q
b110100001 (
b110100001 9
b110100001 b
b110100001 f
b10100001 #
b10100001 2
b10100001 T
b10100001 V
b10100001 m
b100100011 *
b100100011 <
b100100011 c
b100100011 l
b1100001 :
b1100001 [
1$
1,
#50
0,
#55
bx %
bx 3
bx J
bx S
bx &
bx 4
bx U
1`
0a
bx R
bx W
b1000000001000 7
b1000000001000 \
1d
1Q
bx (
bx 9
bx b
bx f
bx #
bx 2
bx T
bx V
bx m
b110100010 *
b110100010 <
b110100010 c
b110100010 l
bx000 :
bx000 [
0$
1,
#60
0,
#65
0d
0Q
b110100011 *
b110100011 <
b110100011 c
b110100011 l
bx001 :
bx001 [
1$
1,
#70
0,
#75
1d
1Q
b110100100 *
b110100100 <
b110100100 c
b110100100 l
bx000 :
bx000 [
0$
1,
#80
0,
#85
0d
0Q
b110100101 *
b110100101 <
b110100101 c
b110100101 l
bx001 :
bx001 [
1$
1,
#90
0,
#95
1d
1Q
b110100110 *
b110100110 <
b110100110 c
b110100110 l
bx000 :
bx000 [
0$
1,
#100
0,
#105
0d
0Q
b110100111 *
b110100111 <
b110100111 c
b110100111 l
bx001 :
bx001 [
1$
1,
#110
0,
#115
1d
1Q
b110101000 *
b110101000 <
b110101000 c
b110101000 l
bx000 :
bx000 [
0$
1,
#120
0,
#125
0d
0Q
b110101001 *
b110101001 <
b110101001 c
b110101001 l
bx001 :
bx001 [
1$
1,
#130
0,
#135
1d
1Q
b110101010 *
b110101010 <
b110101010 c
b110101010 l
bx000 :
bx000 [
0$
1,
#140
0,
#145
0d
0Q
b110101011 *
b110101011 <
b110101011 c
b110101011 l
bx001 :
bx001 [
1$
1,
#150
0,
#155
1d
1Q
b110101100 *
b110101100 <
b110101100 c
b110101100 l
bx000 :
bx000 [
0$
1,
#160
0,
#165
0d
0Q
b110101101 *
b110101101 <
b110101101 c
b110101101 l
bx001 :
bx001 [
1$
1,
#170
0,
#175
1d
1Q
b110101110 *
b110101110 <
b110101110 c
b110101110 l
bx000 :
bx000 [
0$
1,
#180
0,
#185
0d
0Q
b110101111 *
b110101111 <
b110101111 c
b110101111 l
bx001 :
bx001 [
1$
1,
#190
0,
#195
1d
1Q
b110110000 *
b110110000 <
b110110000 c
b110110000 l
bx000 :
bx000 [
0$
1,
#200
0,
#205
0d
0Q
b110110001 *
b110110001 <
b110110001 c
b110110001 l
bx001 :
bx001 [
1$
1,
#210
0,
#215
1d
1Q
b110110010 *
b110110010 <
b110110010 c
b110110010 l
bx000 :
bx000 [
0$
1,
#220
0,
#225
0d
0Q
b110110011 *
b110110011 <
b110110011 c
b110110011 l
bx001 :
bx001 [
1$
1,
#230
0,
#235
1d
1Q
b110110100 *
b110110100 <
b110110100 c
b110110100 l
bx000 :
bx000 [
0$
1,
#240
0,
#245
0d
0Q
b110110101 *
b110110101 <
b110110101 c
b110110101 l
bx001 :
bx001 [
1$
1,
#250
0,
#255
1d
1Q
b110110110 *
b110110110 <
b110110110 c
b110110110 l
bx000 :
bx000 [
0$
1,
#260
0,
#265
0d
0Q
b110110111 *
b110110111 <
b110110111 c
b110110111 l
bx001 :
bx001 [
1$
1,
#270
0,
#275
1d
1Q
b110111000 *
b110111000 <
b110111000 c
b110111000 l
bx000 :
bx000 [
0$
1,
#280
0,
#285
0d
0Q
b110111001 *
b110111001 <
b110111001 c
b110111001 l
bx001 :
bx001 [
1$
1,
#290
0,
#295
1d
1Q
b110111010 *
b110111010 <
b110111010 c
b110111010 l
bx000 :
bx000 [
0$
1,
#300
0,
#305
0d
0Q
b110111011 *
b110111011 <
b110111011 c
b110111011 l
bx001 :
bx001 [
1$
1,
#310
0,
#315
1d
1Q
b110111100 *
b110111100 <
b110111100 c
b110111100 l
bx000 :
bx000 [
0$
1,
#320
0,
#325
0d
0Q
b110111101 *
b110111101 <
b110111101 c
b110111101 l
bx001 :
bx001 [
1$
1,
#330
0,
#335
1d
1Q
b110111110 *
b110111110 <
b110111110 c
b110111110 l
bx000 :
bx000 [
0$
1,
#340
0,
#345
0d
0Q
b110111111 *
b110111111 <
b110111111 c
b110111111 l
bx001 :
bx001 [
1$
1,
#350
0,
#355
1d
1Q
b111000000 *
b111000000 <
b111000000 c
b111000000 l
bx000 :
bx000 [
0$
1,
#360
0,
#365
0d
0Q
b111000001 *
b111000001 <
b111000001 c
b111000001 l
bx001 :
bx001 [
1$
1,
#370
0,
#375
1d
1Q
b111000010 *
b111000010 <
b111000010 c
b111000010 l
bx000 :
bx000 [
0$
1,
#380
0,
#385
0d
0Q
b111000011 *
b111000011 <
b111000011 c
b111000011 l
bx001 :
bx001 [
1$
1,
#390
0,
#395
1d
1Q
b111000100 *
b111000100 <
b111000100 c
b111000100 l
bx000 :
bx000 [
0$
1,
#400
0,
#405
0d
0Q
b111000101 *
b111000101 <
b111000101 c
b111000101 l
bx001 :
bx001 [
1$
1,
#410
0,
#415
1d
1Q
b111000110 *
b111000110 <
b111000110 c
b111000110 l
bx000 :
bx000 [
0$
1,
#420
0,
#425
0d
0Q
b111000111 *
b111000111 <
b111000111 c
b111000111 l
bx001 :
bx001 [
1$
1,
#430
0,
#435
1d
1Q
b111001000 *
b111001000 <
b111001000 c
b111001000 l
bx000 :
bx000 [
0$
1,
#440
0,
#445
0d
0Q
b111001001 *
b111001001 <
b111001001 c
b111001001 l
bx001 :
bx001 [
1$
1,
#450
0,
#455
1d
1Q
b111001010 *
b111001010 <
b111001010 c
b111001010 l
bx000 :
bx000 [
0$
1,
#460
0,
#465
0d
0Q
b111001011 *
b111001011 <
b111001011 c
b111001011 l
bx001 :
bx001 [
1$
1,
#470
0,
#475
1d
1Q
b111001100 *
b111001100 <
b111001100 c
b111001100 l
bx000 :
bx000 [
0$
1,
#480
0,
#485
0d
0Q
b111001101 *
b111001101 <
b111001101 c
b111001101 l
bx001 :
bx001 [
1$
1,
#490
0,
#495
1d
1Q
b111001110 *
b111001110 <
b111001110 c
b111001110 l
bx000 :
bx000 [
0$
1,
#500
0,
