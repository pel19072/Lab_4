$date
	Sat Aug 08 22:24:57 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! led9 $end
$var wire 1 " led8 $end
$var wire 1 # led7 $end
$var wire 1 $ led6 $end
$var wire 1 % led5 $end
$var wire 1 & led4 $end
$var wire 1 ' led3 $end
$var wire 1 ( led2 $end
$var wire 1 ) led11 $end
$var wire 1 * led10 $end
$var wire 1 + led1 $end
$var reg 1 , a1 $end
$var reg 1 - a2 $end
$var reg 1 . a3 $end
$var reg 1 / i1 $end
$var reg 1 0 i2 $end
$var reg 1 1 i3 $end
$var reg 1 2 i4 $end
$var reg 1 3 i5 $end
$var reg 1 4 i6 $end
$var reg 1 5 i7 $end
$var reg 1 6 i8 $end
$var reg 1 7 p1 $end
$var reg 1 8 p2 $end
$var reg 1 9 p3 $end
$var reg 1 : p4 $end
$var reg 1 ; p5 $end
$var reg 1 < p6 $end
$scope module AL1 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 . C $end
$var wire 1 ! Y $end
$upscope $end
$scope module AL2 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 . C $end
$var wire 1 * Y $end
$upscope $end
$scope module AL3 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 . C $end
$var wire 1 ) Y $end
$var wire 1 = notB $end
$var wire 1 > or1 $end
$upscope $end
$scope module G1 $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 9 C $end
$var wire 1 + Y $end
$var wire 1 ? notA $end
$var wire 1 @ notB $end
$var wire 1 A notC $end
$var wire 1 B or1 $end
$var wire 1 C or2 $end
$upscope $end
$scope module G2 $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 9 C $end
$var wire 1 ( Y $end
$upscope $end
$scope module G3 $end
$var wire 1 : A $end
$var wire 1 ; B $end
$var wire 1 < C $end
$var wire 1 ' Y $end
$var wire 1 D notB $end
$upscope $end
$scope module G4 $end
$var wire 1 : A $end
$var wire 1 ; B $end
$var wire 1 < C $end
$var wire 1 & Y $end
$var wire 1 E notA $end
$var wire 1 F notC $end
$var wire 1 G or1 $end
$var wire 1 H or2 $end
$upscope $end
$scope module OP1 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 1 C $end
$var wire 1 2 D $end
$var wire 1 % Y $end
$upscope $end
$scope module OP2 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 1 C $end
$var wire 1 2 D $end
$var wire 1 $ Y $end
$upscope $end
$scope module OP3 $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 5 C $end
$var wire 1 6 D $end
$var wire 1 # Y $end
$upscope $end
$scope module OP4 $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 5 C $end
$var wire 1 6 D $end
$var wire 1 " Y $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
x"
x!
$end
#1
1+
1B
1A
1C
1@
1(
1?
09
08
07
#2
0+
0B
0A
19
#3
1+
1B
1A
0@
0(
09
18
#4
0+
0B
0A
19
#5
1+
1A
1@
1(
0?
1B
09
08
17
#6
0A
19
#7
0+
1A
0C
0@
0(
09
18
#8
1+
0A
1C
19
#10
1&
1H
1'
1F
1D
1G
1E
0<
0;
0:
#11
0&
0H
0F
1<
#12
1&
0'
1F
0D
1H
0<
1;
#13
1'
0F
1<
#14
0&
1F
1D
0G
1H
0E
0<
0;
1:
#15
0H
0F
1<
#16
1&
0'
1F
0D
1G
1H
0<
1;
#17
1'
0F
1<
#18
1%
0$
02
01
00
0/
#19
0%
12
#20
02
11
#21
1%
12
#22
0%
02
01
10
#23
1%
12
#24
02
11
#25
0%
12
#26
1$
02
01
00
1/
#27
1%
0$
12
#28
1$
02
11
#29
0%
12
#30
1%
02
01
10
#31
0%
12
#32
02
11
#33
1%
12
#35
1#
0"
06
05
04
03
#36
0#
1"
16
#37
0"
06
15
#38
16
#39
1"
06
05
14
#40
16
#41
06
15
#42
16
#43
1#
0"
06
05
04
13
#44
1"
16
#45
0"
06
15
#46
1"
16
#47
1#
06
05
14
#48
16
#49
06
15
#50
0#
16
#52
0*
0!
1>
1=
0)
0.
0-
0,
#53
1.
#54
0>
0=
0.
1-
#55
1>
1.
#56
1!
1*
1=
1)
0.
0-
1,
#57
1.
#58
0*
0!
0)
0>
0=
0.
1-
#59
1!
1*
1)
1>
1.
#60
