$date
	Sat Oct 24 01:42:47 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 12 ! value [11:0] $end
$var wire 8 " opcode [7:0] $end
$var wire 4 # R [3:0] $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$var reg 3 & S [2:0] $end
$var reg 12 ' address [11:0] $end
$var reg 1 ( clock $end
$var reg 1 ) enable $end
$var reg 1 * load $end
$var reg 12 + load_data [11:0] $end
$var reg 1 , reset $end
$scope module Al $end
$var wire 4 - A [3:0] $end
$var wire 4 . B [3:0] $end
$var wire 3 / selector [2:0] $end
$var reg 4 0 result [3:0] $end
$upscope $end
$scope module C1 $end
$var wire 1 ( clock $end
$var wire 1 ) enable $end
$var wire 1 * load $end
$var wire 12 1 load_data [11:0] $end
$var wire 1 , reset $end
$var reg 12 2 value [11:0] $end
$upscope $end
$scope module R1 $end
$var wire 12 3 address [11:0] $end
$var wire 8 4 opcode [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
bx 3
bx 2
b0 1
bx 0
bx /
bx .
bx -
0,
b0 +
0*
0)
0(
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
1(
#2
b0 !
b0 2
0(
1,
#3
1(
#4
0(
0,
1)
#5
b1 !
b1 2
1(
#6
0(
#7
b10 !
b10 2
1(
#8
0(
#9
b11 !
b11 2
1(
#10
0(
#11
b100 !
b100 2
1(
#12
0(
#13
b101 !
b101 2
1(
#14
0(
#15
b110 !
b110 2
1(
#16
b10101010101 !
b10101010101 2
0(
b10101010101 +
b10101010101 1
1*
#17
1(
#18
0(
#19
1(
#20
b10111110101 !
b10111110101 2
0(
b10111110101 +
b10111110101 1
#21
1(
#22
0(
#23
1(
#24
b10111110110 !
b10111110110 2
0(
b0 +
b0 1
0*
#25
b10111110111 !
b10111110111 2
1(
#26
0(
#27
b10111111000 !
b10111111000 2
1(
#28
0(
b10 "
b10 4
b0 '
b0 3
#29
b10111111001 !
b10111111001 2
1(
#30
0(
b0 "
b0 4
b1 '
b1 3
#31
b10111111010 !
b10111111010 2
1(
#32
0(
b100 "
b100 4
b11 '
b11 3
#33
b10111111011 !
b10111111011 2
1(
#34
0(
#35
b10111111100 !
b10111111100 2
1(
#36
0(
#37
b10111111101 !
b10111111101 2
1(
#38
0(
#39
b10111111110 !
b10111111110 2
1(
#40
b0 #
b0 0
0(
b0 &
b0 /
b101 %
b101 .
b1010 $
b1010 -
#41
b10111111111 !
b10111111111 2
1(
#42
0(
#43
b11000000000 !
b11000000000 2
1(
#44
b1111 #
b1111 0
0(
b1 &
b1 /
#45
b11000000001 !
b11000000001 2
1(
#46
0(
#47
b11000000010 !
b11000000010 2
1(
#48
0(
b10 &
b10 /
#49
b11000000011 !
b11000000011 2
1(
#50
0(
#51
b11000000100 !
b11000000100 2
1(
#52
b0 #
b0 0
0(
b11 &
b11 /
#53
b11000000101 !
b11000000101 2
1(
#54
0(
#55
b11000000110 !
b11000000110 2
1(
#56
b1010 #
b1010 0
0(
b100 &
b100 /
#57
b11000000111 !
b11000000111 2
1(
#58
0(
#59
b11000001000 !
b11000001000 2
1(
#60
0(
b101 &
b101 /
#61
b11000001001 !
b11000001001 2
1(
#62
0(
#63
b11000001010 !
b11000001010 2
1(
#64
b101 #
b101 0
0(
b110 &
b110 /
#65
b11000001011 !
b11000001011 2
1(
#66
0(
#67
b11000001100 !
b11000001100 2
1(
#68
b0 #
b0 0
0(
b111 &
b111 /
#69
b11000001101 !
b11000001101 2
1(
#70
0(
#71
b11000001110 !
b11000001110 2
1(
#72
0(
#73
b11000001111 !
b11000001111 2
1(
#74
0(
#75
b11000010000 !
b11000010000 2
1(
#76
b100 #
b100 0
0(
b0 &
b0 /
b1100 %
b1100 .
b110 $
b110 -
#77
b11000010001 !
b11000010001 2
1(
#78
0(
#79
b11000010010 !
b11000010010 2
1(
#80
b1110 #
b1110 0
0(
b1 &
b1 /
#81
b11000010011 !
b11000010011 2
1(
#82
0(
#83
b11000010100 !
b11000010100 2
1(
#84
b10 #
b10 0
0(
b10 &
b10 /
#85
b11000010101 !
b11000010101 2
1(
#86
0(
#87
b11000010110 !
b11000010110 2
1(
#88
b0 #
b0 0
0(
b11 &
b11 /
#89
b11000010111 !
b11000010111 2
1(
#90
0(
#91
b11000011000 !
b11000011000 2
1(
#92
b10 #
b10 0
0(
b100 &
b100 /
#93
b11000011001 !
b11000011001 2
1(
#94
0(
#95
b11000011010 !
b11000011010 2
1(
#96
b111 #
b111 0
0(
b101 &
b101 /
#97
b11000011011 !
b11000011011 2
1(
#98
0(
#99
b11000011100 !
b11000011100 2
1(
#100
b1010 #
b1010 0
0(
b110 &
b110 /
#101
b11000011101 !
b11000011101 2
1(
#102
0(
#103
b11000011110 !
b11000011110 2
1(
#104
b1111 #
b1111 0
0(
b111 &
b111 /
#105
b11000011111 !
b11000011111 2
1(
#106
0(
#107
b11000100000 !
b11000100000 2
1(
#108
0(
